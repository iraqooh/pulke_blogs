openapi: 3.0.0
info:
  title: Pulke Blogs API
  version: 1.0.0
  description: REST API for the Pulke Blogs platform

servers:
  - url: https://api.pulkeblogs.com/v1

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        full_name:
          type: string
        bio:
          type: string
        role:
          type: string
          enum: [admin, author, reader, moderator]

    Post:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        slug:
          type: string
        content:
          type: string
        category:
          type: string
        tags:
          type: array
          items:
            type: string
        author:
          $ref: '#/components/schemas/User'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        published:
          type: boolean
        featured_image:
          type: string

    PostCreate:
      type: object
      required: [title, content, category]
      properties:
        title:
          type: string
        content:
          type: string
        category:
          type: string
        tags:
          type: array
          items:
            type: string
        featured_image:
          type: string

    Comment:
      type: object
      properties:
        id:
          type: integer
        post_id:
          type: integer
        user:
          $ref: '#/components/schemas/User'
        content:
          type: string
        parent_id:
          type: integer
          nullable: true
        created_at:
          type: string
          format: date-time

    CommentCreate:
      type: object
      required: [post_id, content]
      properties:
        post_id:
          type: integer
        content:
          type: string
        parent_id:
          type: integer
          nullable: true

    Category:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string

    Tag:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string

paths:
  /auth/register:
    post:
      summary: Register a new user account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: [username, password]
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User registered

  /auth/login:
    post:
      summary: Authenticate and return a JWT token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: [username, password]
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Authenticated

  /auth/logout:
    post:
      summary: Log out current user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Logged out

  /auth/profile:
    get:
      summary: Get the current user's profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Profile details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /posts:
    get:
      summary: Retrieve a list of published blog posts
      parameters:
        - name: search
          in: query
          schema:
            type: string
        - name: category
          in: query
          schema:
            type: string
        - name: tag
          in: query
          schema:
            type: string
        - name: author
          in: query
          schema:
            type: integer
        - name: page
          in: query
          schema:
            type: integer
        - name: limit
          in: query
          schema:
            type: integer
        - name: lang
          in: query
          schema:
            type: string
      responses:
        '200':
          description: A list of blog posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'

    post:
      summary: Create a new blog post
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCreate'
      responses:
        '201':
          description: Post created

  /posts/{id}:
    get:
      summary: Retrieve a specific post
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Post details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'

    put:
      summary: Update a post
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCreate'
      responses:
        '200':
          description: Post updated

    delete:
      summary: Delete a post
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Post deleted

  /posts/{id}/publish:
    patch:
      summary: Publish or unpublish a post
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                published:
                  type: boolean
      responses:
        '200':
          description: Publish status updated

  /posts/drafts:
    get:
      summary: Retrieve draft posts for current author
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of draft posts

  /posts/{id}/comments:
    get:
      summary: Get comments for a post
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: page
          in: query
          schema:
            type: integer
        - name: sort
          in: query
          schema:
            type: string
            enum: [latest, oldest]
      responses:
        '200':
          description: Comments retrieved

    post:
      summary: Add comment to a post
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentCreate'
      responses:
        '201':
          description: Comment added

  /comments/{id}:
    put:
      summary: Edit a comment
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
      responses:
        '200':
          description: Comment updated

    delete:
      summary: Delete a comment
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Comment deleted
